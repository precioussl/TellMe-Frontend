{
	"info": {
		"_postman_id": "b29b0165-0af4-4423-adcd-3b874e752fba",
		"name": "TELLME - REST API",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20388125"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "myFeeds",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:4000/users/myfeeds?userid=1",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"users",
								"myfeeds"
							],
							"query": [
								{
									"key": "userid",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "edit my profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"chucks\",\r\n    \"lastname\": \"norris\",\r\n    \"email\": \"chucks@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:4000/users/1",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "get my profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:4000/users/profile/1",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"users",
								"profile",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "deactivate my account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:4000/users/deactivate/1",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"users",
								"deactivate",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "feeds",
			"item": [
				{
					"name": "view every feeds",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:4000/feeds/",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"feeds",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get a single feed",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:4000/feeds/6",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"feeds",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "create a feed",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Ã„nother feed\",\r\n    \"textarea\": \"Saying my mind\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:4000/feeds/create?userid=5",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"feeds",
								"create"
							],
							"query": [
								{
									"key": "userid",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "edit my feed",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Edited Ã„nother feed\",\r\n    \"textarea\": \"Saying my mind\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:4000/feeds/6?userid=5",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"feeds",
								"6"
							],
							"query": [
								{
									"key": "userid",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete my feed",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Edited Ã„nother feed\",\r\n    \"textarea\": \"Saying my mind\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:4000/feeds/8",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"feeds",
								"8"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "admins",
			"item": [
				{
					"name": "users",
					"item": [
						{
							"name": "view all users",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:4000/admin/users/all",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"admin",
										"users",
										"all"
									]
								}
							},
							"response": []
						},
						{
							"name": "view a user",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:4000/admin/users/5",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"admin",
										"users",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "change user privilege",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"isadmin\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:4000/admin/users/5",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"admin",
										"users",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete user",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"isadmin\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:4000/admin/users/delete/5",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"admin",
										"users",
										"delete",
										"5"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "feeds",
					"item": [
						{
							"name": "view all feeds with the user who created it",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:4000/admin/feeds/all",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"admin",
										"feeds",
										"all"
									]
								}
							},
							"response": []
						},
						{
							"name": "view single feeds with user details",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:4000/admin/feeds/9",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"admin",
										"feeds",
										"9"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete feed",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "localhost:4000/admin/feeds/9",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"admin",
										"feeds",
										"9"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "LOGIN",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"murshid@gmail.com\",\r\n    \"password\": \"testing\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4000/login",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"login"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "REGISTER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"firstname\": \"Chichi\",\n\t\"lastname\": \"Oge\",\n    \"email\": \"example@gmail.com\",\n    \"password\": \"testing\",\n    \"isadmin\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4000/register",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"register"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}